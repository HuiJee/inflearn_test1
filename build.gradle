plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    // library를 다운받는 공개 사이트
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // 위의 라이브러리만 가져와도 의존적인 걸 다 불러옴
    // tomcat은 예전에 서버와 코드를 분리하던 시절에 썼음. 지금은 한 번에 실행
    
    // test 위한 junit 부분은 자동으로 설정됨
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // JDBC와 h2 데이터베이스 라이브러리 추가
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    runtimeOnly 'com.h2database:h2'


    /*
        [스프링부트 라이브러리]
        spring-boot-starter-web
            spring-boot-starter-tomcat : 톰캣(웹서버)
            spring-webmvc : 스프링 웹 MVC
        spring-boot-starter-thymeleaf : 타임리프 템플릿 엔진(View)
        spring-boot-starter(공통) : 스프링 부트 + 스프링 코어 + 로깅
            spring-boot
                spring-core
            spring-boot-starter-logging
                logback, slf4j
                
                
        [테스트 라이브러리]
        spring-boot-starter-test
            junit : 테스트 프레임워크
            mockito : 목 라이브러리
            assertj : 테스트 코드를 좀 더 편하게 작성하게 도와주는 라이브러리
            spring-test : 스프링 통합 테스트 지원
    */
}

tasks.named('test') {
    useJUnitPlatform()
}
